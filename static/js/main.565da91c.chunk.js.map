{"version":3,"sources":["components/Input.js","components/Form.js","components/Address.js","App.js","reportWebVitals.js","index.js"],"names":["Input","value","func","label","name","htmlFor","className","type","onChange","e","target","Form","handleForm","useState","setName","number","setNumber","onSubmit","preventDefault","Address","props","num","App","output","setOutput","data","map","item","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAaA,EAAQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACxC,OACI,qCACI,uBAAOC,QAASD,EAAhB,SAAuBD,IACvB,uBAAOG,UAAU,QAAQC,KAAK,OAAOH,KAAMA,EAAMI,SAAU,SAACC,GAAD,OAAOP,EAAKO,EAAEC,OAAOT,QAAQA,MAAOA,QCF9FU,EAAO,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACnB,EAAwBC,mBAAS,IAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KASA,OACI,uBAAMC,SARW,SAACR,GAClBA,EAAES,iBACFN,EAAW,CAACR,OAAMW,WAClBD,EAAQ,IACRE,EAAU,KAIV,UACI,cAAC,EAAD,CAAOf,MAAOG,EAAMF,KAAMY,EAASX,MAAM,SAASC,KAAK,SACvD,cAAC,EAAD,CAAOH,MAAOc,EAAQb,KAAMc,EAAWb,MAAM,WAAWC,KAAK,WAC7D,wBAAQG,KAAK,SAAb,wBCTGY,G,YAPC,SAACC,GACb,OACA,qBAAKd,UAAU,gBAAf,SACI,qBAAIA,UAAU,SAAd,UAAwBc,EAAMC,IAA9B,IAAoCD,EAAMhB,KAA1C,IAAiDgB,EAAML,cCkBhDO,EAlBH,WACV,MAA4BT,mBAAS,IAArC,mBAAOU,EAAP,KAAeC,EAAf,KAIA,OACE,sBAAKlB,UAAU,UAAf,UACE,8CACA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAMM,WAPO,SAACa,GAClBD,EAAU,GAAD,mBAAKD,GAAL,CAAaE,QAOjBF,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,EAAD,CAASP,IAAKO,EAAQ,EAAexB,KAAMuB,EAAKvB,KAAMW,OAAQY,EAAKZ,QAArCa,aCHzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.565da91c.chunk.js","sourcesContent":["export const Input = ({ value, func, label, name }) => {\r\n    return (\r\n        <>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input className=\"input\" type=\"text\" name={name} onChange={(e) => func(e.target.value)} value={value}></input>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Input } from \"./Input.js\"\r\nexport const Form = ({ handleForm }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleForm({name, number});\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Input value={name} func={setName} label=\"Name: \" name=\"name\"/>\r\n            <Input value={number} func={setNumber} label=\"Number: \" name=\"number\" />\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n","import \"./Address.css\"\r\nconst Address = (props) => {\r\n    return (\r\n    <div className=\"outputWrapper\">\r\n        <h4 className=\"output\">{props.num} {props.name} {props.number}</h4>\r\n    </div>\r\n    )}\r\n\r\nexport default Address;","import { useState } from \"react\";\nimport {Form} from \"./components/Form.js\";\nimport \"./App.css\"\nimport Address from \"./components/Address.js\"\nconst App = () => {\n  const [output, setOutput] = useState([]);\n  const handleForm = (data) => {\n    setOutput([...output, data])\n  }\n  return (\n    <div className=\"wrapper\">\n      <h1>Address Book</h1>\n      <div className=\"box\">\n        <Form handleForm={handleForm}/>\n        {output.map((item, index) => (\n          <Address num={index + 1} key={index} name={item.name} number={item.number}/>))}\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}